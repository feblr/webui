#!/usr/bin/env node

/**
 * Module dependencies.
 */
var app = require('../src/app');
var config = require('../src/config');
var debug = require('debug')('{{ prompt.name }}');
var http = require('http');

var startApp = function() {
  var port = config.app.port || 3000;
  app.set('port', port);

  function onError(error) {
    if (error.syscall !== 'listen') {
      throw error;
    }

    var bind = typeof port === 'string'
      ? 'Pipe ' + port
      : 'Port ' + port;

    switch (error.code) {
      case 'EACCES':
        console.error(bind + ' requires elevated privileges');
        process.exit(1);
        break;
      case 'EADDRINUSE':
        console.error(bind + ' is already in use');
        process.exit(1);
        break;
      default:
        throw error;
    }
  }

  function onListening() {
    var addr = server.address();
    var bind = typeof addr === 'string'
      ? 'pipe ' + addr
      : 'port ' + addr.port;
    debug('Listening on ' + bind);
  }

  var server = http.createServer(app);
  server.on('error', onError);
  server.on('listening', onListening);

  server.listen(app.get('port'));
};

var stopApp = function() {
  process.exit(0);
};

process.on('SIGINT',function() {
  stopApp();
});

startApp();
